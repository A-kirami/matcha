name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  release:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            label: linux-amd64
            target: x86_64-unknown-linux-gnu
          - os: macos-latest
            label: macos-amd64
            target: x86_64-apple-darwin
          - os: macos-latest
            label: macos-arm64
            target: aarch64-apple-darwin
          - os: windows-latest
            label: windows-amd64
            target: x86_64-pc-windows-msvc
    name: ${{ matrix.label }}
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies (ubuntu only)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Rust setup
        uses: dtolnay/rust-toolchain@stable

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Pnpm setup
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Sync node version and setup cache
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'pnpm'

      - name: Install app dependencies and build web
        run: pnpm i

      - name: Rustup add target
        run: rustup target add ${{ matrix.target }}

      - name: Build the app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: 'v__VERSION__'
          releaseName: 'Matcha v__VERSION__'
          releaseBody: 'See the assets to download and install this version.'
          releaseDraft: true
          prerelease: false
          args: -t ${{ matrix.target }}
